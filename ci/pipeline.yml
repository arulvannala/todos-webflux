---
resource_types:
  - name: artifactory-resource
    type: docker-image
    source:
      repository: springio/artifactory-resource

resources:
  - name: code-repo
    type: git
    source:
      uri: ((code-repo-uri))
      branch: ((code-repo-branch))

  - name: version
    type: semver
    source:
      initial_version: 1.0.0-rc.0
      driver: git
      uri: ((version-repo-uri))
      branch: ((version-repo-branch))
      file: version
      private_key: ((version-repo-private-key))

  - name: candidate-release
    type: artifactory-resource
    source:
      uri: ((artifactory-uri))
      username: ((artifactory-username))
      password: ((artifactory-password))
      build_name: ((artifactory-build-name))

#  - name: final-release
#    type: artifactory-resource
#    source:
#      uri: ((artifactory-uri))
#      username: ((artifactory-username))
#      password: ((artifactory-password))
#      build_name: ((artifactory-buildname))
#
#  - name: cf-test
#    type: cf
#    source:
#      api: ((cf-test-api))
#      username: ((cf-test-username))
#      password: ((cf-test-password))
#      organization: ((cf-test-org))
#      space: ((cf-test-space))
#
#  - name: cf-prod
#    type: cf
#    source:
#      api: ((cf-prod-api))
#      username: ((cf-prod-username))
#      password: ((cf-prod-password))
#      organization: ((cf-prod-org))
#      space: ((cf-prod-space))

jobs:
  - name: unit-test
    plan:
      - get: code-repo
        trigger: true
      - task: unit-test
        file: code-repo/ci/tasks/unit-test.yml

  - name: build-artifact
    serial: true
    plan:
      - get: code-repo
        passed: [ unit-test ]
        trigger: true
      - get: version
        params: { pre: rc }
      - task: build
        file: code-repo/ci/tasks/build.yml
      - put: candidate-release
        params: { file: build-artifacts/todos-webflux-*.jar }
      - put: version
        params: { file: version/version }

#  - name: integration-test
#    serial: true
#    plan:
#      - get: candidate-release
#        trigger: true
#        passed: [ build-artifact ]
#      - get: code-repo
#        passed: [ build-artifact ]
#      - get: version
#        passed: [ build-artifact ]
#      - task: prepare-integration
#        file: code-repo/ci/tasks/prepare-integration.yml
#        params:
#          CF_MANIFEST_HOST: ((cf-manifest-host))
#      - put: cf
#        params:
#          manifest: prepare-integration/manifest.yml
#      - task: integration
#        file: pcfdemo/ci/tasks/integration.yml
#
#  - name: ship-it
#    serial_groups: [ version ]
#    plan:
#      - get: candidate-release
#        passed: [ integration-test ]
#      - get: pcfdemo
#        passed: [ integration-test ]
#      - get: version
#        params: { bump: final }
#      - task: prepare-final
#        file: pcfdemo/ci/tasks/prepare-final.yml
#      - put: final-release
#        params: { file: prepare-final/pcf-demo-*.war }
#      - put: version
#        params: { file: version/number }
#
#  - name: major
#    serial_groups: [ version ]
#    plan:
#      - put: version
#        params: { bump: major, pre: rc }
#
#  - name: minor
#    serial_groups: [ version ]
#    plan:
#      - put: version
#        params: { bump: minor, pre: rc }
#
#  - name: patch
#    serial_groups: [ version ]
#    plan:
#      - get: version
#        passed: [ ship-it ]
#        trigger: true
#      - put: version
#        params: { bump: patch, pre: rc }
